syntax = "proto2";
import "SignalService.proto";

// /opt/bin/protoc-c --c_out=. UfsrvMessageQueue.proto
// cp UfsrvMessageQueue.pb-c.c ..; cp UfsrvMessageQueue.pb-c.h ../include/
//


//notification message for changes in Session status for a user
 
message SessionMessage {
//session event type
enum Status {
    QUIT 				= 0;
    CONNECTED 	= 1;
    SUSPENDED 	= 2;
    INVALIDTED	=	3;	//associated with account removal
    HEARTBEAT		= 4;
    PREFERENCE	=	5;
    GEOFENCED		=	6; //change in geogroup assignment for the user (roaming mode has to be enabled)
    REBOOTED		=	7; //cache reset
  }

  message GeoFence {
  	optional	uint64	geofence_current	=	1;
  	optional	uint64	geofence_past		=	2;
  }
  
	required 	uint64 				target_session	=	1;
	required	Status 				status			=	2;
	repeated 	FenceRecord 		fences			=	3; //fences affected by this SessionMessage
	repeated 	FenceRecord 		fences_invited	=	4; //fences for which user invited  affected by this SessionMessage
	repeated 	FenceRecord 		fences_blocked	=	5; //fences in which user blocked affected by this SessionMessage
	repeated 	UserPreference		prefs			= 	6;
	repeated	FenceUserPreference	fence_prefs		=	7; //for each fence -> collection of prefs, complementary to prefs above
	optional	GeoFence			geo_fence		=	8;
	optional 	CommandHeader		header			=	9;
}//10

message MessageQueueMessage {
	enum BroadcastSemantics {
  	INTER						=	0; //pure INTER broadcast	receiver only modify local data model
  	INTRA						=	1;	//pure INTRA broadcast	receiver expected to change backend data model
  	INTRA_WITH_INTER_SEMANTICS	=	2;	//broadcast from outside server class Backend data model has already taken place, therefore treat message with INTER semantics
  	INTER_WITH_INTRA_SEMANTICS	=	3;
  }
  
	required uint32 				origin		    	= 	1;	//originating server
	optional uint32 				target_ufsrv		=	8; //the ufsrv instance for which the message is targeted
	optional uint32 				command_type		=	2;//
	optional bytes   				ufsrvuid			=	5;//username remove onece its processed in SignaServce proto
	optional string					storage_id			=	7;
	optional BroadcastSemantics		broadcast_semantics	=	14;
	optional uint64					ufsrv_req_id		=	15; //request id generated when ufsrv instance was chosen
	optional uint32					geogroup_id			=	16;	//geogroup id targetd for handling message
	optional DataMessage 			wire_data			=	9;//original data message
	optional FenceCommand			fence				=	10;
	optional MessageCommand 		message				=	11;
	optional LocationCommand 		location			=	12;
	optional SessionMessage 		session				=	13;
	optional UserCommand 			user				=	17;
}//18
