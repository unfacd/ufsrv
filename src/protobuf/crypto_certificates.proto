/**
 * Copyright (C) 2013 - 2015 Open WhisperSystems
 * Copyright (C) 2015-19 unfacd works
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto2";

//both KeyCertificate and IdentityCertificate are lift-out from the original containing messages ServerCertificate and SenderCertificate,
//respectively, because current protobuf generator won't generate separate packing function unless they are defined standalone
message Certificate {
    optional uint32 id  = 1; //to facilitate future revocation of keys stored at client end
    optional bytes  key = 2;
}

message ServerCertificate {
//    message Certificate {
//        optional uint32 id  = 1; //to facilitate future revocation of keys stored at client end
//        optional bytes  key = 2;
//    }
    optional bytes     certificate = 1; //KeyCertificate
    optional bytes     signature   = 2;
}

message IdentityCertificate {
    optional string            sender        = 1;
    optional uint32            senderDevice  = 2;
    optional fixed64           expires       = 3;
    optional bytes             identityKey   = 4;
    optional ServerCertificate signer        = 5;
}

message SenderCertificate {
    optional bytes certificate = 1;
    optional bytes signature   = 2;
}

/*
message ServerCertificate {
    message Certificate {
        optional uint32 id  = 1;
        optional bytes  key = 2;
    }

    optional bytes certificate = 1;
    optional bytes signature   = 2;
}

message SenderCertificate {
    message Certificate {
        optional string            sender        = 1;
        optional uint32            senderDevice  = 2;
        optional fixed64           expires       = 3;
        optional bytes             identityKey   = 4;
        optional ServerCertificate signer        = 5;
    }

    optional bytes certificate = 1;
    optional bytes signature   = 2;
}
*/